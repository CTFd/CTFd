import{e as d,h as m,C as l,V as s,b as p,a as h,c as f,d as y}from"./main-D4L0FPhU.js";import{$ as a}from"../jquery-BT3bhPE2.js";import{F as w,T as C,a as E,R as _,C as L,H as v,N as b,b as S}from"../NextChallenge-Dv28FTpn.js";function u(t){l._internal.challenge={},a.getScript(l.config.urlRoot+t.scripts.view,function(){let e=t.create;a("#create-chal-entry-div").html(e),p(),a.getScript(l.config.urlRoot+t.scripts.create,function(){a("#create-chal-entry-div form").submit(function(o){o.preventDefault();const r=a("#create-chal-entry-div form").serializeJSON();l.fetch("/userchallenge/api/challenges/",{method:"POST",credentials:"same-origin",headers:{Accept:"application/json","Content-Type":"application/json"},body:JSON.stringify(r)}).then(function(n){return n.json()}).then(function(n){if(n.success)a("#challenge-create-options #challenge_id").val(n.data.id),a("#challenge-create-options").modal();else{let i="";for(const c in n.errors)i+=n.errors[c].join(`
`),i+=`
`;h({title:"Error",body:i,button:"OK"})}})})})})}function D(t){t.preventDefault();var e=a(t.target).serializeJSON(!0);let o={challenge_id:e.challenge_id,content:e.flag||"",type:e.flag_type,data:e.flag_data?e.flag_data:""},r=function(){l.fetch("/userchallenge/api/challenges/"+e.challenge_id,{method:"PATCH",credentials:"same-origin",headers:{Accept:"application/json","Content-Type":"application/json"},body:JSON.stringify({state:e.state})}).then(function(n){return n.json()}).then(function(n){n.success&&setTimeout(function(){window.location=l.config.urlRoot+"/userchallenge/challenges/"+e.challenge_id},700)})};Promise.all([new Promise(function(n,i){if(o.content.length==0){n();return}l.fetch("/userchallenge/api/flags",{method:"POST",credentials:"same-origin",headers:{Accept:"application/json","Content-Type":"application/json"},body:JSON.stringify(o)}).then(function(c){n(c.json())})}),new Promise(function(n,i){let c=t.target,g={challenge:e.challenge_id,type:"challenge"};a(c.elements.file).val()&&f.files.upload(c,g),n()})]).then(n=>{r()})}a(()=>{if(a(".preview-challenge").click(function(t){let e=`/userchallenge/challenges/preview/${window.CHALLENGE_ID}`;a("#challenge-window").html(`<iframe src="${e}" height="100%" width="100%" frameBorder=0></iframe>`),a("#challenge-modal").modal()}),a(".comments-challenge").click(function(t){a("#challenge-comments-window").modal()}),a(".delete-challenge").click(function(t){d({title:"Delete Challenge",body:`Are you sure you want to delete <strong>${m(window.CHALLENGE_NAME)}</strong>`,success:function(){l.fetch("/userchallenge/api/challenges/"+window.CHALLENGE_ID,{method:"DELETE"}).then(function(e){return e.json()}).then(function(e){e.success&&(window.location=l.config.urlRoot+"/admin/challenges")})}})}),a("#challenge-update-container > form").submit(function(t){t.preventDefault();var e=a(t.target).serializeJSON(!0);l.fetch("/userchallenge/api/challenges/"+window.CHALLENGE_ID+"/flags",{method:"GET",credentials:"same-origin",headers:{Accept:"application/json","Content-Type":"application/json"}}).then(function(o){return o.json()}).then(function(o){let r=function(){l.fetch("/userchallenge/api/challenges/"+window.CHALLENGE_ID,{method:"PATCH",credentials:"same-origin",headers:{Accept:"application/json","Content-Type":"application/json"},body:JSON.stringify(e)}).then(function(n){return n.json()}).then(function(n){if(n.success){switch(a(".challenge-state").text(n.data.state),n.data.state){case"visible":a(".challenge-state").removeClass("badge-danger").addClass("badge-success");break;case"hidden":a(".challenge-state").removeClass("badge-success").addClass("badge-danger");break}y({title:"Success",body:"Your challenge has been updated!"})}else{let i="";for(const c in n.errors)i+=n.errors[c].join(`
`),i+=`
`;h({title:"Error",body:i,button:"OK"})}})};o.data.length===0&&e.state==="visible"?d({title:"Missing Flags",body:"This challenge does not have any flags meaning it may be unsolveable. Are you sure you'd like to update this challenge?",success:r}):r()})}),a("#challenge-create-options form").submit(D),document.querySelector("#challenge-flags")){const t=s.extend(w);let e=document.createElement("div");document.querySelector("#challenge-flags").appendChild(e),new t({propsData:{challenge_id:window.CHALLENGE_ID}}).$mount(e)}if(document.querySelector("#challenge-topics")){const t=s.extend(C);let e=document.createElement("div");document.querySelector("#challenge-topics").appendChild(e),new t({propsData:{challenge_id:window.CHALLENGE_ID}}).$mount(e)}if(document.querySelector("#challenge-tags")){const t=s.extend(E);let e=document.createElement("div");document.querySelector("#challenge-tags").appendChild(e),new t({propsData:{challenge_id:window.CHALLENGE_ID}}).$mount(e)}if(document.querySelector("#prerequisite-add-form")){const t=s.extend(_);let e=document.createElement("div");document.querySelector("#prerequisite-add-form").appendChild(e),new t({propsData:{challenge_id:window.CHALLENGE_ID}}).$mount(e)}if(document.querySelector("#challenge-files")){const t=s.extend(L);let e=document.createElement("div");document.querySelector("#challenge-files").appendChild(e),new t({propsData:{challenge_id:window.CHALLENGE_ID}}).$mount(e)}if(document.querySelector("#challenge-hints")){const t=s.extend(v);let e=document.createElement("div");document.querySelector("#challenge-hints").appendChild(e),new t({propsData:{challenge_id:window.CHALLENGE_ID}}).$mount(e)}if(document.querySelector("#next-add-form")){const t=s.extend(b);let e=document.createElement("div");document.querySelector("#next-add-form").appendChild(e),new t({propsData:{challenge_id:window.CHALLENGE_ID}}).$mount(e)}if(document.querySelector("#comment-box")){const t=s.extend(S);let e=document.createElement("div");document.querySelector("#comment-box").appendChild(e),new t({propsData:{type:"challenge",id:window.CHALLENGE_ID}}).$mount(e)}a.get("/userchallenge/api/challenges/types",function(t){const e=t.data;u(e.standard),a("#create-chals-select input[name=type]").change(function(){let o=e[this.value];u(o)})})});
